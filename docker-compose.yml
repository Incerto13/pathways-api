services:

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    ports:
      - 3000:3000
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      MONGO_URI: mongodb://admin:password@mongo:27017/pathways?authSource=admin
      RABBITMQ_URI: amqp://rabbitmq:5672
    depends_on:
      mongo: 
        condition: service_started
      rabbitmq:
        condition: service_healthy
    restart: always

  mongo:
    build:
      context: .
      dockerfile: docker/mongo/Dockerfile 
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: evolve
    ports:
      - 27017:27017
    volumes:
      - ./docker/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: always

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_BASICAUTH: false
    ports:
      - 8081:8081
    depends_on:
      - mongo
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:   
      test: ["CMD", "rabbitmq-diagnostics", "ping"]    
      interval: 10s      
      timeout: 5s      
      retries: 5
    restart: always
