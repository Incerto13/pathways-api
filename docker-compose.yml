services:

  # api:
  #   build: .
  #   container_name: api
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - .:/app
  #     - /app/node_modules
  #   depends_on:
  #     - mongo
  #     - rabbitmq

  mongo:
    build:
      context: .
      dockerfile: Dockerfile 
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: evolve
    ports:
      - 27017:27017
    volumes:
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: always

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_BASICAUTH: false
    ports:
      - 8081:8081
    depends_on:
      - mongo

  rabbitmq:
    image: rabbitmq:3-management
    environment:    
      - RABBITMQ_PROMETHEUS_RETENTION_INTERVAL=300
    ports:
      - 5672:5672
      - 15672:15672
      - 15692:15692 # Prometheus metrics
